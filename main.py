from fastapi import *
from fastapi.openapi.utils import get_openapi
import uvicorn
from pydantic import BaseModel

app = FastAPI()

tag_list = [
    "–ì—Ä–∞–∂–¥–∞–Ω–µ ü§µ"
]

citizens = [
    {
        "id": 1,
        "nickname": "PRISTORoff0",
        "dsc_id": 436507782263603200,
        "role": "emperror",
        "passport": "GSTDJRU71623U92K"
    },
    {
        "id": 2,
        "nickname": "_Tecxas",
        "dsc_id": 839340956988866580,
        "role": "chancellor",
        "passport": "SLAOP947ABSH3NCD"
    }
]

#. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≥—Ä–∞–∂–¥–∞–Ω
@app.get("/citizens", tags=[tag_list[0]], summary="–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π —Å–ø–∏—Å–æ–∫ –≥—Ä–∞–∂–¥–∞–Ω üìÉ")
def get_citizens():
    return citizens

#. –ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É
@app.get("/citizens/nickname/{nickname}", tags=[tag_list[0]], summary="–ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ –ù–∏–∫–Ω–µ–π–º—É üè∑Ô∏è")
def find_citizen_nickname(nickname: str):
    for citizen_bynick in citizens:
        if citizen_bynick["nickname"] == nickname:
            return citizen_bynick
    raise HTTPException(status_code=404)
    
#. –ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ Discord ID
@app.get("/citizens/id/{dsc_id}", tags=[tag_list[0]], summary="–ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ Discord ID üìã")
def find_citizen_id(dsc_id: int):
    for citizen_byid in citizens:
        if citizen_byid["dsc_id"] == dsc_id:
            return citizen_byid
    raise HTTPException(status_code=404)

#. –ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ –Ω–æ–º–µ—Ä—É –ø–∞—Å–ø–æ—Ä—Ç–∞
@app.get("/citizens/passport/{passport}", tags=[tag_list[0]], summary="–ù–∞–π—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –ø–æ –Ω–æ–º–µ—Ä—É –ø–∞—Å–ø–æ—Ä—Ç–∞ üìì")
def find_citizen_nickname(passport: str):
    for citizen_bypassport in citizens:
        if citizen_bypassport["passport"] == passport:
            return citizen_bypassport
    raise HTTPException(status_code=404)

class NewCitizen(BaseModel):
    nickname: str
    dsc_id: int
    role: str
    passport: str

#* –î–æ–±–∞–≤—Ç—å –Ω–æ–≤–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞
@app.post("/citizens", tags=[tag_list[0]], summary="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ üìù")
def add_citizen(new_citizen: NewCitizen):
    citizens.append({
        "nickname": new_citizen.nickname,
        "dsc_id": new_citizen.dsc_id,
        "role": new_citizen.role,
        "passport": new_citizen.passport
    })
    return {"status": True, "message": "–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω –≤–Ω–µ—Å—ë–Ω –≤ —Ä–µ–µ—Å—Ç—Ä!"}


#? –ö–∞—Å—Ç–æ–º–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
def custom_openapi():
    if app.openapi_schema:
        return app.openapi_schema
    openapi_schema = get_openapi(
        title="ECLIPSEID API",
        version="0.0.1",
        description="–î–æ–∫—É–º–µ–Ω–∞—Ü–∏—è –ø–æ **API –≠–∫–æ—Å–∏—Å—Ç–µ–º—ã ECLIPSEID**",
        routes=app.routes,
    )
    app.openapi_schema = openapi_schema
    return app.openapi_schema


app.openapi = custom_openapi

if __name__ == "__main__":
    uvicorn.run("main:app", reload=True)